// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in0_V_TVALID,
        out_V_TREADY,
        in0_V_TDATA,
        in0_V_TREADY,
        out_V_TDATA,
        out_V_TVALID
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in0_V_TVALID;
input   out_V_TREADY;
input  [7:0] in0_V_TDATA;
output   in0_V_TREADY;
output  [7:0] out_V_TDATA;
output   out_V_TVALID;

reg ap_idle;
reg in0_V_TREADY;
reg out_V_TVALID;

reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state0;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state0;
wire   [0:0] icmp_ln478_fu_466_p2;
wire   [0:0] icmp_ln480_fu_489_p2;
wire   [0:0] and_ln539_fu_752_p2;
reg    ap_predicate_op118_read_state1;
reg    ap_predicate_op156_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_CS_iter1_fsm_state2;
reg   [0:0] icmp_ln478_reg_1149;
reg   [0:0] icmp_ln478_reg_1149_pp0_iter1_reg;
reg   [0:0] icmp_ln480_reg_1156;
reg   [0:0] icmp_ln480_reg_1156_pp0_iter1_reg;
reg   [0:0] or_ln499_reg_1160;
reg   [0:0] or_ln499_reg_1160_pp0_iter1_reg;
reg    ap_predicate_op239_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire    ap_CS_iter2_fsm_state3;
wire    ap_enable_reg_pp0_iter0;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in0_V_TDATA_blk_n;
reg    out_V_TDATA_blk_n;
wire   [0:0] or_ln499_fu_507_p2;
wire   [31:0] current_block_read_fu_534_p2;
reg   [31:0] current_block_read_reg_1164;
wire   [2:0] trunc_ln502_fu_540_p1;
reg   [2:0] trunc_ln502_reg_1170;
wire   [6:0] current_line_in_block_fu_574_p2;
reg   [6:0] current_line_in_block_reg_1175;
wire   [0:0] icmp_ln518_fu_586_p2;
reg   [0:0] icmp_ln518_reg_1180;
wire   [0:0] icmp_ln518_reg_1180_pp0_iter0_reg;
wire   [0:0] icmp_ln521_fu_603_p2;
reg   [0:0] icmp_ln521_reg_1184;
wire   [0:0] icmp_ln521_reg_1184_pp0_iter0_reg;
wire   [0:0] icmp_ln524_fu_628_p2;
reg   [0:0] icmp_ln524_reg_1188;
wire   [0:0] icmp_ln524_reg_1188_pp0_iter0_reg;
wire   [0:0] icmp_ln527_fu_658_p2;
reg   [0:0] icmp_ln527_reg_1192;
wire   [0:0] icmp_ln527_reg_1192_pp0_iter0_reg;
wire   [2:0] current_block_read_1_fu_938_p2;
reg   [2:0] current_block_read_1_reg_1205;
wire   [6:0] inputBuf_address0;
reg    inputBuf_ce0;
wire   [7:0] inputBuf_q0;
reg   [6:0] inputBuf_address1;
reg    inputBuf_ce1;
reg    inputBuf_we1;
wire   [6:0] inputBuf_1_address0;
reg    inputBuf_1_ce0;
wire   [7:0] inputBuf_1_q0;
reg   [6:0] inputBuf_1_address1;
reg    inputBuf_1_ce1;
reg    inputBuf_1_we1;
wire   [6:0] inputBuf_2_address0;
reg    inputBuf_2_ce0;
wire   [7:0] inputBuf_2_q0;
reg   [6:0] inputBuf_2_address1;
reg    inputBuf_2_ce1;
reg    inputBuf_2_we1;
wire   [6:0] inputBuf_3_address0;
reg    inputBuf_3_ce0;
wire   [7:0] inputBuf_3_q0;
reg   [6:0] inputBuf_3_address1;
reg    inputBuf_3_ce1;
reg    inputBuf_3_we1;
wire   [6:0] inputBuf_4_address0;
reg    inputBuf_4_ce0;
wire   [7:0] inputBuf_4_q0;
reg   [6:0] inputBuf_4_address1;
reg    inputBuf_4_ce1;
reg    inputBuf_4_we1;
wire   [63:0] zext_ln543_fu_758_p1;
wire   [63:0] zext_ln484_fu_812_p1;
wire   [63:0] zext_ln515_fu_943_p1;
reg   [9:0] i_fu_92;
wire   [9:0] i_2_fu_472_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_i_1;
reg   [31:0] ofm_y_fu_96;
wire   [31:0] ofm_y_2_fu_699_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_load;
reg   [31:0] ap_sig_allocacmp_ofm_y_load_1;
reg   [31:0] ofm_x_fu_100;
wire   [31:0] ofm_x_1_fu_652_p2;
reg   [31:0] ap_sig_allocacmp_ofm_x_load;
reg   [31:0] ap_sig_allocacmp_ofm_x_load_1;
reg   [31:0] inp_fu_104;
wire   [31:0] inp_3_fu_707_p3;
wire   [31:0] inp_2_fu_821_p2;
reg   [31:0] ap_sig_allocacmp_inp_1;
reg   [31:0] k_y_fu_108;
wire   [31:0] k_y_1_fu_622_p2;
reg   [31:0] ap_sig_allocacmp_k_y_load;
reg   [31:0] ap_sig_allocacmp_k_y_load_1;
reg   [31:0] k_x_fu_112;
wire   [31:0] k_x_1_fu_597_p2;
reg   [31:0] ap_sig_allocacmp_k_x_load;
reg   [31:0] current_block_write_fu_116;
wire   [31:0] grp_fu_376_p3;
reg   [31:0] ap_sig_allocacmp_current_block_write_5;
wire   [0:0] grp_fu_354_p2;
reg   [31:0] count_simd_fu_120;
wire   [31:0] count_simd_1_fu_580_p2;
reg   [31:0] ap_sig_allocacmp_count_simd_load;
reg   [31:0] ap_sig_allocacmp_count_simd_load_1;
reg   [31:0] floor_block_read_fu_124;
wire   [31:0] floor_block_read_4_fu_918_p3;
reg   [31:0] ceil_block_read_fu_128;
wire   [31:0] ceil_block_read_4_fu_930_p3;
reg   [31:0] read_block_fu_132;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] ap_sig_allocacmp_read_block_3;
reg   [31:0] current_line_fu_136;
wire   [31:0] grp_fu_348_p2;
reg   [31:0] ap_sig_allocacmp_current_line_load_2;
reg   [31:0] ap_sig_allocacmp_current_line_load_3;
reg   [31:0] ap_sig_allocacmp_current_line_load;
reg   [31:0] ap_sig_allocacmp_current_line_load_1;
reg   [31:0] grp_load_fu_342_p1;
reg   [31:0] grp_load_fu_345_p1;
reg   [31:0] counter_internal_block_fu_140;
wire   [31:0] counter_internal_block_3_fu_799_p3;
reg   [31:0] ap_sig_allocacmp_counter_internal_block_1;
wire   [7:0] tmp_fu_1001_p13;
wire   [2:0] trunc_ln475_fu_485_p1;
wire   [31:0] grp_fu_365_p2;
wire   [0:0] grp_fu_370_p2;
wire   [0:0] icmp_ln499_fu_495_p2;
wire   [0:0] icmp_ln499_1_fu_501_p2;
wire   [31:0] shl_ln502_fu_528_p2;
wire   [1:0] trunc_ln514_1_fu_548_p1;
wire   [2:0] shl_ln1_fu_552_p3;
wire   [2:0] trunc_ln514_fu_544_p1;
wire   [2:0] add_ln514_fu_560_p2;
wire   [6:0] shl_ln514_1_fu_566_p3;
wire   [6:0] trunc_ln478_fu_481_p1;
wire   [31:0] ofm_y_1_fu_687_p2;
wire   [0:0] icmp_ln530_fu_693_p2;
wire   [0:0] icmp_ln539_fu_740_p2;
wire   [0:0] icmp_ln539_1_fu_746_p2;
wire   [31:0] counter_internal_block_2_fu_787_p2;
wire   [0:0] icmp_ln558_fu_793_p2;
wire   [0:0] icmp_ln508_fu_873_p2;
wire   [31:0] floor_block_read_1_fu_884_p2;
wire   [31:0] ceil_block_read_1_fu_878_p2;
wire   [0:0] icmp_ln504_fu_868_p2;
wire   [31:0] floor_block_read_2_fu_890_p3;
wire   [31:0] floor_block_read_3_fu_906_p2;
wire   [31:0] ceil_block_read_2_fu_898_p3;
wire   [31:0] ceil_block_read_3_fu_912_p2;
wire   [2:0] trunc_ln474_fu_926_p1;
wire   [7:0] tmp_fu_1001_p11;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
reg    ap_ST_iter0_fsm_state1_blk;
wire    ap_ST_iter1_fsm_state2_blk;
reg    ap_ST_iter2_fsm_state3_blk;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0;
reg    ap_predicate_op126_store_state1;
reg    ap_enable_operation_126;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_predicate_op164_store_state1;
reg    ap_enable_operation_164;
reg    ap_predicate_op216_load_state2;
reg    ap_enable_operation_216;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op236_load_state3;
reg    ap_enable_operation_236;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op128_store_state1;
reg    ap_enable_operation_128;
reg    ap_predicate_op166_store_state1;
reg    ap_enable_operation_166;
reg    ap_predicate_op215_load_state2;
reg    ap_enable_operation_215;
reg    ap_predicate_op235_load_state3;
reg    ap_enable_operation_235;
reg    ap_predicate_op130_store_state1;
reg    ap_enable_operation_130;
reg    ap_predicate_op168_store_state1;
reg    ap_enable_operation_168;
reg    ap_predicate_op214_load_state2;
reg    ap_enable_operation_214;
reg    ap_predicate_op234_load_state3;
reg    ap_enable_operation_234;
reg    ap_predicate_op132_store_state1;
reg    ap_enable_operation_132;
reg    ap_predicate_op170_store_state1;
reg    ap_enable_operation_170;
reg    ap_predicate_op213_load_state2;
reg    ap_enable_operation_213;
reg    ap_predicate_op233_load_state3;
reg    ap_enable_operation_233;
reg    ap_predicate_op134_store_state1;
reg    ap_enable_operation_134;
reg    ap_predicate_op172_store_state1;
reg    ap_enable_operation_172;
reg    ap_predicate_op217_load_state2;
reg    ap_enable_operation_217;
reg    ap_predicate_op237_load_state3;
reg    ap_enable_operation_237;
wire    ap_start_int;
reg    ap_condition_351;
reg    ap_condition_328;
reg    ap_condition_316;
reg    ap_condition_298;
reg    ap_condition_286;
reg    ap_condition_101;
reg    ap_condition_341;
reg    ap_condition_862;
reg    ap_condition_927;
reg    ap_condition_931;
reg    ap_condition_935;
reg    ap_condition_942;
reg    ap_condition_946;
reg    ap_condition_284;
wire   [2:0] tmp_fu_1001_p1;
wire   [2:0] tmp_fu_1001_p3;
wire   [2:0] tmp_fu_1001_p5;
wire   [2:0] tmp_fu_1001_p7;
wire  signed [2:0] tmp_fu_1001_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
#0 i_fu_92 = 10'd0;
#0 ofm_y_fu_96 = 32'd0;
#0 ofm_x_fu_100 = 32'd0;
#0 inp_fu_104 = 32'd0;
#0 k_y_fu_108 = 32'd0;
#0 k_x_fu_112 = 32'd0;
#0 current_block_write_fu_116 = 32'd0;
#0 count_simd_fu_120 = 32'd0;
#0 floor_block_read_fu_124 = 32'd0;
#0 ceil_block_read_fu_128 = 32'd0;
#0 read_block_fu_132 = 32'd0;
#0 current_line_fu_136 = 32'd0;
#0 counter_internal_block_fu_140 = 32'd0;
#0 ap_done_reg = 1'b0;
end

ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride_inputBuf_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
inputBuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_address0),
    .ce0(inputBuf_ce0),
    .q0(inputBuf_q0),
    .address1(inputBuf_address1),
    .ce1(inputBuf_ce1),
    .we1(inputBuf_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride_inputBuf_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
inputBuf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_address0),
    .ce0(inputBuf_1_ce0),
    .q0(inputBuf_1_q0),
    .address1(inputBuf_1_address1),
    .ce1(inputBuf_1_ce1),
    .we1(inputBuf_1_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride_inputBuf_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
inputBuf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_address0),
    .ce0(inputBuf_2_ce0),
    .q0(inputBuf_2_q0),
    .address1(inputBuf_2_address1),
    .ce1(inputBuf_2_ce1),
    .we1(inputBuf_2_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride_inputBuf_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
inputBuf_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_address0),
    .ce0(inputBuf_3_ce0),
    .q0(inputBuf_3_q0),
    .address1(inputBuf_3_address1),
    .ce1(inputBuf_3_ce1),
    .we1(inputBuf_3_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride_inputBuf_RAM_S2P_LUTRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
inputBuf_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_4_address0),
    .ce0(inputBuf_4_ce0),
    .q0(inputBuf_4_q0),
    .address1(inputBuf_4_address1),
    .ce1(inputBuf_4_ce1),
    .we1(inputBuf_4_we1),
    .d1(in0_V_TDATA)
);

ConvolutionInputGenerator_3_sparsemux_11_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_11_3_8_1_1_U1(
    .din0(inputBuf_q0),
    .din1(inputBuf_1_q0),
    .din2(inputBuf_2_q0),
    .din3(inputBuf_3_q0),
    .din4(inputBuf_4_q0),
    .def(tmp_fu_1001_p11),
    .sel(current_block_read_1_reg_1205),
    .dout(tmp_fu_1001_p13)
);

ConvolutionInputGenerator_3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ceil_block_read_fu_128 <= 32'd5;
    end else if (((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln527_reg_1192_pp0_iter0_reg == 1'd1) & (icmp_ln524_reg_1188_pp0_iter0_reg == 1'd1) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln527_reg_1192_pp0_iter0_reg == 1'd0) & (icmp_ln524_reg_1188_pp0_iter0_reg == 1'd1) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln524_reg_1188_pp0_iter0_reg 
    == 1'd0) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd0) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd0) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)))) begin
        ceil_block_read_fu_128 <= ceil_block_read_4_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_286)) begin
            count_simd_fu_120 <= 32'd0;
        end else if ((1'b1 == ap_condition_298)) begin
            count_simd_fu_120 <= 32'd0;
        end else if ((1'b1 == ap_condition_316)) begin
            count_simd_fu_120 <= 32'd0;
        end else if ((1'b1 == ap_condition_328)) begin
            count_simd_fu_120 <= 32'd0;
        end else if ((1'b1 == ap_condition_351)) begin
            count_simd_fu_120 <= count_simd_1_fu_580_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            count_simd_fu_120 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_341)) begin
            counter_internal_block_fu_140 <= 32'd0;
        end else if (((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0))) begin
            counter_internal_block_fu_140 <= counter_internal_block_3_fu_799_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            counter_internal_block_fu_140 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1)))) begin
        current_block_write_fu_116 <= grp_fu_376_p3;
    end else if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        current_block_write_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1))) begin
        current_line_fu_136 <= 32'd0;
    end else if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1))) begin
        current_line_fu_136 <= 32'd0;
    end else if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd0)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd0)))) begin
        current_line_fu_136 <= grp_fu_348_p2;
    end else if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        current_line_fu_136 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        floor_block_read_fu_124 <= 32'd0;
    end else if (((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln527_reg_1192_pp0_iter0_reg == 1'd1) & (icmp_ln524_reg_1188_pp0_iter0_reg == 1'd1) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln527_reg_1192_pp0_iter0_reg == 1'd0) & (icmp_ln524_reg_1188_pp0_iter0_reg == 1'd1) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln524_reg_1188_pp0_iter0_reg 
    == 1'd0) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd1) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln521_reg_1184_pp0_iter0_reg == 1'd0) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd1) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)) | (~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2) & (icmp_ln518_reg_1180_pp0_iter0_reg == 1'd0) & (or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0)))) begin
        floor_block_read_fu_124 <= floor_block_read_4_fu_918_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((icmp_ln478_fu_466_p2 == 1'd0)) begin
            i_fu_92 <= i_2_fu_472_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if (((icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0))) begin
            inp_fu_104 <= inp_2_fu_821_p2;
        end else if ((1'b1 == ap_condition_286)) begin
            inp_fu_104 <= inp_3_fu_707_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            inp_fu_104 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_286)) begin
            k_x_fu_112 <= 32'd0;
        end else if ((1'b1 == ap_condition_298)) begin
            k_x_fu_112 <= 32'd0;
        end else if ((1'b1 == ap_condition_316)) begin
            k_x_fu_112 <= 32'd0;
        end else if ((1'b1 == ap_condition_328)) begin
            k_x_fu_112 <= k_x_1_fu_597_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_x_fu_112 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_284)) begin
            k_y_fu_108 <= 32'd0;
        end else if ((1'b1 == ap_condition_316)) begin
            k_y_fu_108 <= k_y_1_fu_622_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_y_fu_108 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_286)) begin
            ofm_x_fu_100 <= 32'd0;
        end else if ((1'b1 == ap_condition_298)) begin
            ofm_x_fu_100 <= ofm_x_1_fu_652_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            ofm_x_fu_100 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_101)) begin
        if ((1'b1 == ap_condition_286)) begin
            ofm_y_fu_96 <= ofm_y_2_fu_699_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            ofm_y_fu_96 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1) & (grp_fu_354_p2 == 1'd1)))) begin
        read_block_fu_132 <= grp_fu_360_p2;
    end else if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        read_block_fu_132 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        current_block_read_reg_1164 <= current_block_read_fu_534_p2;
        current_line_in_block_reg_1175 <= current_line_in_block_fu_574_p2;
        icmp_ln478_reg_1149 <= icmp_ln478_fu_466_p2;
        icmp_ln480_reg_1156 <= icmp_ln480_fu_489_p2;
        icmp_ln518_reg_1180 <= icmp_ln518_fu_586_p2;
        icmp_ln521_reg_1184 <= icmp_ln521_fu_603_p2;
        icmp_ln524_reg_1188 <= icmp_ln524_fu_628_p2;
        icmp_ln527_reg_1192 <= icmp_ln527_fu_658_p2;
        or_ln499_reg_1160 <= or_ln499_fu_507_p2;
        trunc_ln502_reg_1170 <= trunc_ln502_fu_540_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        current_block_read_1_reg_1205 <= current_block_read_1_fu_938_p2;
        icmp_ln478_reg_1149_pp0_iter1_reg <= icmp_ln478_reg_1149;
        icmp_ln480_reg_1156_pp0_iter1_reg <= icmp_ln480_reg_1156;
        or_ln499_reg_1160_pp0_iter1_reg <= or_ln499_reg_1160;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_iter0_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_iter0_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_iter1_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) begin
        ap_ST_iter2_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_iter2_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln478_fu_466_p2 == 1'd1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_iter2_fsm_state0) & (1'b1 == ap_CS_iter1_fsm_state0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_simd_load = 32'd0;
    end else begin
        ap_sig_allocacmp_count_simd_load = count_simd_fu_120;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_simd_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_count_simd_load_1 = count_simd_fu_120;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_counter_internal_block_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_counter_internal_block_1 = counter_internal_block_fu_140;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_block_write_5 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_block_write_5 = current_block_write_fu_116;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load = current_line_fu_136;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_1 = current_line_fu_136;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_2 = current_line_fu_136;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_current_line_load_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_current_line_load_3 = current_line_fu_136;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_92;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_inp_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_inp_1 = inp_fu_104;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_x_load = 32'd0;
    end else begin
        ap_sig_allocacmp_k_x_load = k_x_fu_112;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_y_load = 32'd0;
    end else begin
        ap_sig_allocacmp_k_y_load = k_y_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_y_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_k_y_load_1 = k_y_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_x_load = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_x_load = ofm_x_fu_100;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_x_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_x_load_1 = ofm_x_fu_100;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_y_load = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_y_load = ofm_y_fu_96;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_ofm_y_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_ofm_y_load_1 = ofm_y_fu_96;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter0_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_read_block_3 = 32'd0;
    end else begin
        ap_sig_allocacmp_read_block_3 = read_block_fu_132;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            grp_load_fu_342_p1 = ap_sig_allocacmp_current_line_load;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            grp_load_fu_342_p1 = ap_sig_allocacmp_current_line_load_2;
        end else begin
            grp_load_fu_342_p1 = 'bx;
        end
    end else begin
        grp_load_fu_342_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_862)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            grp_load_fu_345_p1 = ap_sig_allocacmp_current_line_load_1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            grp_load_fu_345_p1 = ap_sig_allocacmp_current_line_load_3;
        end else begin
            grp_load_fu_345_p1 = 'bx;
        end
    end else begin
        grp_load_fu_345_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (ap_predicate_op156_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)) | ((ap_start_int == 1'b1) & (ap_predicate_op118_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        in0_V_TDATA_blk_n = in0_V_TVALID;
    end else begin
        in0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (ap_predicate_op156_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (ap_predicate_op118_read_state1 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        in0_V_TREADY = 1'b1;
    end else begin
        in0_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_927)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            inputBuf_1_address1 = zext_ln484_fu_812_p1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            inputBuf_1_address1 = zext_ln543_fu_758_p1;
        end else begin
            inputBuf_1_address1 = 'bx;
        end
    end else begin
        inputBuf_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_1_ce0 = 1'b1;
    end else begin
        inputBuf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_1_ce1 = 1'b1;
    end else begin
        inputBuf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_1_we1 = 1'b1;
    end else begin
        inputBuf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_931)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            inputBuf_2_address1 = zext_ln484_fu_812_p1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            inputBuf_2_address1 = zext_ln543_fu_758_p1;
        end else begin
            inputBuf_2_address1 = 'bx;
        end
    end else begin
        inputBuf_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_2_ce0 = 1'b1;
    end else begin
        inputBuf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_2_ce1 = 1'b1;
    end else begin
        inputBuf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_2_we1 = 1'b1;
    end else begin
        inputBuf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_935)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            inputBuf_3_address1 = zext_ln484_fu_812_p1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            inputBuf_3_address1 = zext_ln543_fu_758_p1;
        end else begin
            inputBuf_3_address1 = 'bx;
        end
    end else begin
        inputBuf_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_3_ce0 = 1'b1;
    end else begin
        inputBuf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_3_ce1 = 1'b1;
    end else begin
        inputBuf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_3_we1 = 1'b1;
    end else begin
        inputBuf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_942)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            inputBuf_4_address1 = zext_ln484_fu_812_p1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            inputBuf_4_address1 = zext_ln543_fu_758_p1;
        end else begin
            inputBuf_4_address1 = 'bx;
        end
    end else begin
        inputBuf_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_4_ce0 = 1'b1;
    end else begin
        inputBuf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & ~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & ~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_4_ce1 = 1'b1;
    end else begin
        inputBuf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & ~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & ~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_4_we1 = 1'b1;
    end else begin
        inputBuf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_946)) begin
        if ((icmp_ln480_fu_489_p2 == 1'd1)) begin
            inputBuf_address1 = zext_ln484_fu_812_p1;
        end else if (((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0))) begin
            inputBuf_address1 = zext_ln543_fu_758_p1;
        end else begin
            inputBuf_address1 = 'bx;
        end
    end else begin
        inputBuf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        inputBuf_ce0 = 1'b1;
    end else begin
        inputBuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_ce1 = 1'b1;
    end else begin
        inputBuf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)) | (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1)))) begin
        inputBuf_we1 = 1'b1;
    end else begin
        inputBuf_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op239_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TDATA_blk_n = out_V_TREADY;
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (ap_predicate_op239_write_state3 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3))) begin
        out_V_TVALID = 1'b1;
    end else begin
        out_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((1'b1 == ap_CS_iter0_fsm_state1) & (1'b1 == ap_block_state1_pp0_stage0_iter0))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (1'b0 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else if (((~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3)) | (~((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign add_ln514_fu_560_p2 = (shl_ln1_fu_552_p3 + trunc_ln514_fu_544_p1);

assign and_ln539_fu_752_p2 = (icmp_ln539_fu_740_p2 & icmp_ln539_1_fu_746_p2);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state0 = ap_CS_iter2_fsm[32'd0];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_iter0_fsm_state1 == ap_CS_iter0_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2) | (1'b1 == ap_block_state1_pp0_stage0_iter0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | ((ap_predicate_op156_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)) | ((ap_predicate_op118_read_state1 == 1'b1) & (in0_V_TVALID == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op239_write_state3 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op239_write_state3 == 1'b1) & (out_V_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_101 = (~((1'b1 == ap_block_state1_pp0_stage0_iter0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((1'b1 == ap_block_state3_io) | (1'b1 == ap_block_state3_pp0_stage0_iter2)))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_284 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln524_fu_628_p2 == 1'd1) & (icmp_ln521_fu_603_p2 == 1'd1) & (icmp_ln518_fu_586_p2 == 1'd1) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_286 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln527_fu_658_p2 == 1'd1) & (icmp_ln524_fu_628_p2 == 1'd1) & (icmp_ln521_fu_603_p2 == 1'd1) & (icmp_ln518_fu_586_p2 == 1'd1) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_298 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln527_fu_658_p2 == 1'd0) & (icmp_ln524_fu_628_p2 == 1'd1) & (icmp_ln521_fu_603_p2 == 1'd1) & (icmp_ln518_fu_586_p2 == 1'd1) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_316 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln524_fu_628_p2 == 1'd0) & (icmp_ln521_fu_603_p2 == 1'd1) & (icmp_ln518_fu_586_p2 == 1'd1) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_328 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln521_fu_603_p2 == 1'd0) & (icmp_ln518_fu_586_p2 == 1'd1) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_341 = ((icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (grp_fu_354_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_351 = ((icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (icmp_ln518_fu_586_p2 == 1'd0) & (or_ln499_fu_507_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_862 = ((ap_start_int == 1'b1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_927 = ((ap_start_int == 1'b1) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_931 = ((ap_start_int == 1'b1) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_935 = ((ap_start_int == 1'b1) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_942 = (~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (ap_start_int == 1'b1) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_946 = ((ap_start_int == 1'b1) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_enable_operation_126 = (ap_predicate_op126_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_128 = (ap_predicate_op128_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_130 = (ap_predicate_op130_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_132 = (ap_predicate_op132_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_134 = (ap_predicate_op134_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_172 = (ap_predicate_op172_store_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_213 = (ap_predicate_op213_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_214 = (ap_predicate_op214_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_215 = (ap_predicate_op215_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_216 = (ap_predicate_op216_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_217 = (ap_predicate_op217_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_233 = (ap_predicate_op233_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_234 = (ap_predicate_op234_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_235 = (ap_predicate_op235_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_236 = (ap_predicate_op236_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_237 = (ap_predicate_op237_load_state3 == 1'b1);
end

assign ap_enable_reg_pp0_iter0 = 1'b0;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_iter1_fsm_state2));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_iter2_fsm_state3));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op118_read_state1 = ((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op126_store_state1 = ((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op128_store_state1 = ((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op130_store_state1 = ((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op132_store_state1 = ((1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op134_store_state1 = (~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (1'd1 == and_ln539_fu_752_p2) & (icmp_ln480_fu_489_p2 == 1'd0) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op156_read_state1 = ((icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_store_state1 = ((icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_store_state1 = ((icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd2) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state1 = ((icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd1) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_store_state1 = ((icmp_ln480_fu_489_p2 == 1'd1) & (trunc_ln475_fu_485_p1 == 3'd0) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_store_state1 = (~(trunc_ln475_fu_485_p1 == 3'd0) & ~(trunc_ln475_fu_485_p1 == 3'd1) & ~(trunc_ln475_fu_485_p1 == 3'd2) & ~(trunc_ln475_fu_485_p1 == 3'd3) & (icmp_ln480_fu_489_p2 == 1'd1) & (icmp_ln478_fu_466_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op213_load_state2 = ((or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0));
end

always @ (*) begin
    ap_predicate_op214_load_state2 = ((or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0));
end

always @ (*) begin
    ap_predicate_op215_load_state2 = ((or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0));
end

always @ (*) begin
    ap_predicate_op216_load_state2 = ((or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0));
end

always @ (*) begin
    ap_predicate_op217_load_state2 = ((or_ln499_reg_1160 == 1'd1) & (icmp_ln480_reg_1156 == 1'd0) & (icmp_ln478_reg_1149 == 1'd0));
end

always @ (*) begin
    ap_predicate_op233_load_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op234_load_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op235_load_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op236_load_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op237_load_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op239_write_state3 = ((or_ln499_reg_1160_pp0_iter1_reg == 1'd1) & (icmp_ln480_reg_1156_pp0_iter1_reg == 1'd0) & (icmp_ln478_reg_1149_pp0_iter1_reg == 1'd0));
end

assign ceil_block_read_1_fu_878_p2 = ($signed(ceil_block_read_fu_128) + $signed(32'd4294967291));

assign ceil_block_read_2_fu_898_p3 = ((icmp_ln508_fu_873_p2[0:0] == 1'b1) ? ceil_block_read_1_fu_878_p2 : ceil_block_read_fu_128);

assign ceil_block_read_3_fu_912_p2 = (ceil_block_read_fu_128 + 32'd5);

assign ceil_block_read_4_fu_930_p3 = ((icmp_ln504_fu_868_p2[0:0] == 1'b1) ? ceil_block_read_2_fu_898_p3 : ceil_block_read_3_fu_912_p2);

assign count_simd_1_fu_580_p2 = (ap_sig_allocacmp_count_simd_load_1 + 32'd1);

assign counter_internal_block_2_fu_787_p2 = (ap_sig_allocacmp_counter_internal_block_1 + 32'd1);

assign counter_internal_block_3_fu_799_p3 = ((icmp_ln558_fu_793_p2[0:0] == 1'b1) ? 32'd0 : counter_internal_block_2_fu_787_p2);

assign current_block_read_1_fu_938_p2 = (trunc_ln502_reg_1170 - trunc_ln474_fu_926_p1);

assign current_block_read_fu_534_p2 = (shl_ln502_fu_528_p2 + ap_sig_allocacmp_k_y_load);

assign current_line_in_block_fu_574_p2 = (shl_ln514_1_fu_566_p3 + trunc_ln478_fu_481_p1);

assign floor_block_read_1_fu_884_p2 = ($signed(floor_block_read_fu_124) + $signed(32'd4294967291));

assign floor_block_read_2_fu_890_p3 = ((icmp_ln508_fu_873_p2[0:0] == 1'b1) ? floor_block_read_1_fu_884_p2 : floor_block_read_fu_124);

assign floor_block_read_3_fu_906_p2 = (floor_block_read_fu_124 + 32'd5);

assign floor_block_read_4_fu_918_p3 = ((icmp_ln504_fu_868_p2[0:0] == 1'b1) ? floor_block_read_2_fu_890_p3 : floor_block_read_3_fu_906_p2);

assign grp_fu_348_p2 = (grp_load_fu_345_p1 + 32'd1);

assign grp_fu_354_p2 = ((grp_fu_348_p2 == 32'd96) ? 1'b1 : 1'b0);

assign grp_fu_360_p2 = (ap_sig_allocacmp_read_block_3 + 32'd1);

assign grp_fu_365_p2 = (ap_sig_allocacmp_current_block_write_5 + 32'd1);

assign grp_fu_370_p2 = ((grp_fu_365_p2 == 32'd5) ? 1'b1 : 1'b0);

assign grp_fu_376_p3 = ((grp_fu_370_p2[0:0] == 1'b1) ? 32'd0 : grp_fu_365_p2);

assign i_2_fu_472_p2 = (ap_sig_allocacmp_i_1 + 10'd1);

assign icmp_ln478_fu_466_p2 = ((ap_sig_allocacmp_i_1 == 10'd864) ? 1'b1 : 1'b0);

assign icmp_ln480_fu_489_p2 = ((ap_sig_allocacmp_inp_1 < 32'd288) ? 1'b1 : 1'b0);

assign icmp_ln499_1_fu_501_p2 = ((ap_sig_allocacmp_read_block_3 == 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln499_fu_495_p2 = ((ap_sig_allocacmp_counter_internal_block_1 < 32'd287) ? 1'b1 : 1'b0);

assign icmp_ln504_fu_868_p2 = ((current_block_read_reg_1164 < ceil_block_read_fu_128) ? 1'b1 : 1'b0);

assign icmp_ln508_fu_873_p2 = ((current_block_read_reg_1164 < floor_block_read_fu_124) ? 1'b1 : 1'b0);

assign icmp_ln518_fu_586_p2 = ((count_simd_1_fu_580_p2 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln518_reg_1180_pp0_iter0_reg = icmp_ln518_reg_1180;

assign icmp_ln521_fu_603_p2 = ((k_x_1_fu_597_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln521_reg_1184_pp0_iter0_reg = icmp_ln521_reg_1184;

assign icmp_ln524_fu_628_p2 = ((k_y_1_fu_622_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln524_reg_1188_pp0_iter0_reg = icmp_ln524_reg_1188;

assign icmp_ln527_fu_658_p2 = ((ofm_x_1_fu_652_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln527_reg_1192_pp0_iter0_reg = icmp_ln527_reg_1192;

assign icmp_ln530_fu_693_p2 = ((ofm_y_1_fu_687_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln539_1_fu_746_p2 = ((ap_sig_allocacmp_read_block_3 < 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln539_fu_740_p2 = ((ap_sig_allocacmp_counter_internal_block_1 < 32'd191) ? 1'b1 : 1'b0);

assign icmp_ln558_fu_793_p2 = ((counter_internal_block_2_fu_787_p2 == 32'd287) ? 1'b1 : 1'b0);

assign inp_2_fu_821_p2 = (ap_sig_allocacmp_inp_1 + 32'd1);

assign inp_3_fu_707_p3 = ((icmp_ln530_fu_693_p2[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_inp_1);

assign inputBuf_1_address0 = zext_ln515_fu_943_p1;

assign inputBuf_2_address0 = zext_ln515_fu_943_p1;

assign inputBuf_3_address0 = zext_ln515_fu_943_p1;

assign inputBuf_4_address0 = zext_ln515_fu_943_p1;

assign inputBuf_address0 = zext_ln515_fu_943_p1;

assign k_x_1_fu_597_p2 = (ap_sig_allocacmp_k_x_load + 32'd1);

assign k_y_1_fu_622_p2 = (ap_sig_allocacmp_k_y_load_1 + 32'd1);

assign ofm_x_1_fu_652_p2 = (ap_sig_allocacmp_ofm_x_load_1 + 32'd1);

assign ofm_y_1_fu_687_p2 = (ap_sig_allocacmp_ofm_y_load_1 + 32'd1);

assign ofm_y_2_fu_699_p3 = ((icmp_ln530_fu_693_p2[0:0] == 1'b1) ? 32'd0 : ofm_y_1_fu_687_p2);

assign or_ln499_fu_507_p2 = (icmp_ln499_fu_495_p2 | icmp_ln499_1_fu_501_p2);

assign out_V_TDATA = tmp_fu_1001_p13;

assign shl_ln1_fu_552_p3 = {{trunc_ln514_1_fu_548_p1}, {1'd0}};

assign shl_ln502_fu_528_p2 = ap_sig_allocacmp_ofm_y_load << 32'd1;

assign shl_ln514_1_fu_566_p3 = {{add_ln514_fu_560_p2}, {4'd0}};

assign tmp_fu_1001_p11 = 'bx;

assign trunc_ln474_fu_926_p1 = floor_block_read_4_fu_918_p3[2:0];

assign trunc_ln475_fu_485_p1 = ap_sig_allocacmp_current_block_write_5[2:0];

assign trunc_ln478_fu_481_p1 = ap_sig_allocacmp_count_simd_load[6:0];

assign trunc_ln502_fu_540_p1 = current_block_read_fu_534_p2[2:0];

assign trunc_ln514_1_fu_548_p1 = ap_sig_allocacmp_ofm_x_load[1:0];

assign trunc_ln514_fu_544_p1 = ap_sig_allocacmp_k_x_load[2:0];

assign zext_ln484_fu_812_p1 = grp_load_fu_342_p1;

assign zext_ln515_fu_943_p1 = current_line_in_block_reg_1175;

assign zext_ln543_fu_758_p1 = grp_load_fu_342_p1;

always @ (posedge ap_clk) begin
    ap_enable_reg_pp0_iter1 <= 1'b0;
    ap_enable_reg_pp0_iter2 <= 1'b0;
end

endmodule //ConvolutionInputGenerator_3_ConvolutionInputGenerator_kernel_stride
